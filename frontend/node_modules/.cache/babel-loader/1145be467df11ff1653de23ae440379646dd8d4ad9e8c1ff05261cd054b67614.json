{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scr\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\RealtimeInspector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { connectToWebSocket, subscribeToTokens, unsubscribeFromTokens, disconnect } from '../services/websocketService';\nimport { Box, TextField, Button, Card, CardContent, Typography, Chip, IconButton, Grid, CircularProgress, Switch, FormControlLabel } from '@mui/material';\nimport { HighlightOff, TrendingUp, TrendingDown } from '@mui/icons-material';\nimport './RealtimeInspector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealtimeInspector = ({\n  darkMode,\n  toggleDarkMode\n}) => {\n  _s();\n  // Using state to store option chain data for component functionality\n  const [optionChainData, setOptionChainData] = useState(null);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscriptionUpdates, setSubscriptionUpdates] = useState({});\n  const [tokenSearch, setTokenSearch] = useState('');\n  const [availableTokens, setAvailableTokens] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionError, setConnectionError] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [reconnecting, setReconnecting] = useState(false);\n  const [customToken, setCustomToken] = useState('');\n  const handleInitialData = useCallback(data => {\n    setOptionChainData(data);\n    setIsLoading(false);\n\n    // Prepare available tokens list\n    const tokens = [{\n      token: 'UNDERLYING',\n      label: 'Underlying Asset',\n      type: 'UNDERLYING'\n    }, ...data.strikes.flatMap(strike => [{\n      token: strike.call.token,\n      label: `CALL ${strike.strikePrice}`,\n      type: 'CALL',\n      strike: strike.strikePrice\n    }, {\n      token: strike.put.token,\n      label: `PUT ${strike.strikePrice}`,\n      type: 'PUT',\n      strike: strike.strikePrice\n    }])];\n    setAvailableTokens(tokens);\n\n    // No longer auto-subscribing to underlying token\n    // Let the user explicitly subscribe to tokens they want\n  }, []);\n  const handlePriceUpdate = useCallback(data => {\n    setSubscriptionUpdates(prev => {\n      const newUpdates = {\n        ...prev\n      };\n\n      // Safely process updates\n      Object.entries(data).forEach(([token, update]) => {\n        if (!update) return; // Skip if update is undefined\n\n        // Extract price and percentChange, handling different property names\n        const price = update.price !== undefined ? update.price : update.currentPrice !== undefined ? update.currentPrice : 0;\n        const percentChange = update.percentChange !== undefined ? update.percentChange : 0;\n        if (!newUpdates[token]) {\n          newUpdates[token] = {\n            values: [],\n            currentPrice: price,\n            percentChange: percentChange,\n            updatedAt: Date.now()\n          };\n        } else {\n          newUpdates[token].currentPrice = price;\n          newUpdates[token].percentChange = percentChange;\n          newUpdates[token].updatedAt = Date.now();\n        }\n\n        // Keep only the last 20 updates for the chart\n        newUpdates[token].values = [...newUpdates[token].values.slice(-19), price];\n      });\n      return newUpdates;\n    });\n  }, []);\n  const handleSubscriptionUpdate = useCallback(subs => {\n    setSubscriptions(subs);\n  }, []);\n  const handleConnectionStatus = useCallback(status => {\n    setIsConnected(status);\n    if (status) {\n      setReconnecting(false);\n    }\n  }, []);\n  const handleReconnecting = useCallback((attempt, maxAttempts) => {\n    setReconnecting(true);\n  }, []);\n  useEffect(() => {\n    console.log('RealtimeInspector: Connecting to WebSocket');\n\n    // Establish WebSocket connection immediately when component mounts\n    const connection = connectToWebSocket({\n      onInitialData: handleInitialData,\n      onPriceUpdate: handlePriceUpdate,\n      onSubscriptionUpdate: handleSubscriptionUpdate,\n      onConnectionStatus: handleConnectionStatus,\n      onReconnecting: handleReconnecting,\n      onError: error => {\n        console.error('RealtimeInspector WebSocket error:', error);\n        setConnectionError('Connection error: ' + (error.message || error));\n      }\n    });\n\n    // Keep track of cleanup function to unsubscribe properly on unmount\n    return () => {\n      console.log('RealtimeInspector: Cleaning up');\n      // No need to disconnect on unmount since we want to keep connections between tab switches\n    };\n  }, [handleInitialData, handlePriceUpdate, handleSubscriptionUpdate, handleConnectionStatus, handleReconnecting]);\n  const handleTokenSubscribe = token => {\n    console.log('Subscribing to token:', token);\n    // Add to local state immediately for responsive UI\n    setSubscriptions(prev => {\n      if (!prev.includes(token)) {\n        return [...prev, token];\n      }\n      return prev;\n    });\n    subscribeToTokens([token]);\n  };\n  const handleTokenUnsubscribe = token => {\n    console.log('Unsubscribing from token:', token);\n    // Remove from local state immediately for responsive UI\n    setSubscriptions(prev => prev.filter(t => t !== token));\n    unsubscribeFromTokens([token]);\n  };\n  const handleCustomTokenSubscribe = () => {\n    if (customToken.trim()) {\n      handleTokenSubscribe(customToken.trim());\n      setCustomToken('');\n    }\n  };\n  const filteredTokens = availableTokens.filter(item => item.label.toLowerCase().includes(tokenSearch.toLowerCase()));\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: `${darkMode ? 'dark-mode' : ''}`,\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        flexDirection: 'column',\n        gap: 2,\n        backgroundColor: darkMode ? '#121212' : '#f5f5f5',\n        color: darkMode ? '#fff' : '#333'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: darkMode,\n          onChange: toggleDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 20\n        }, this),\n        label: \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n  if (connectionError) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: `${darkMode ? 'dark-mode' : ''}`,\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        flexDirection: 'column',\n        gap: 2,\n        backgroundColor: darkMode ? '#121212' : '#f5f5f5',\n        color: darkMode ? '#fff' : '#333'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"error\",\n        children: connectionError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => window.location.reload(),\n        children: \"Reload Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: darkMode,\n          onChange: toggleDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 20\n        }, this),\n        label: \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  const hasOptionData = Boolean(optionChainData);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: `realtime-inspector ${darkMode ? 'dark-mode' : ''}`,\n    sx: {\n      display: 'flex',\n      height: 'calc(100vh - 64px)',\n      backgroundColor: darkMode ? '#121212' : '#f5f5f5',\n      color: darkMode ? '#fff' : '#333',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"inspector-sidebar\",\n      sx: {\n        width: '300px',\n        borderRight: '1px solid',\n        borderColor: darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        overflowY: 'hidden',\n        backgroundColor: darkMode ? '#1e1e1e' : '#fff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          borderBottom: '1px solid',\n          borderColor: darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: isConnected ? \"Connected\" : reconnecting ? \"Reconnecting...\" : \"Disconnected\",\n            color: isConnected ? \"success\" : reconnecting ? \"warning\" : \"error\",\n            size: \"small\",\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), isConnected ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            size: \"small\",\n            onClick: () => {\n              // Unsubscribe from all tokens\n              if (subscriptions.length > 0) {\n                unsubscribeFromTokens(subscriptions);\n                setSubscriptions([]);\n                setSubscriptionUpdates({});\n              }\n              // Disconnect WebSocket\n              disconnect();\n              setIsConnected(false);\n            },\n            sx: {\n              fontSize: '0.75rem',\n              px: 1,\n              py: 0.5\n            },\n            children: \"Disconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"success\",\n            size: \"small\",\n            onClick: () => {\n              // Reconnect WebSocket\n              connectToWebSocket({\n                onInitialData: handleInitialData,\n                onPriceUpdate: handlePriceUpdate,\n                onSubscriptionUpdate: handleSubscriptionUpdate,\n                onConnectionStatus: handleConnectionStatus,\n                onReconnecting: handleReconnecting,\n                onError: error => {\n                  console.error('RealtimeInspector WebSocket error:', error);\n                  setConnectionError('Connection error: ' + (error.message || error));\n                }\n              });\n            },\n            sx: {\n              fontSize: '0.75rem',\n              px: 1,\n              py: 0.5\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              size: \"small\",\n              checked: darkMode,\n              onChange: toggleDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 24\n            }, this),\n            label: \"Dark\",\n            sx: {\n              ml: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          placeholder: \"Search tokens...\",\n          value: tokenSearch,\n          onChange: e => setTokenSearch(e.target.value),\n          sx: {\n            mb: 1,\n            '& .MuiOutlinedInput-root': {\n              backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : '#fff',\n              color: darkMode ? '#fff' : 'inherit',\n              '& fieldset': {\n                borderColor: darkMode ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)'\n              },\n              '&:hover fieldset': {\n                borderColor: darkMode ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)'\n              }\n            },\n            '& .MuiInputBase-input::placeholder': {\n              color: darkMode ? 'rgba(255,255,255,0.5)' : 'rgba(0,0,0,0.5)',\n              opacity: 1\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            size: \"small\",\n            placeholder: \"Custom token\",\n            value: customToken,\n            onChange: e => setCustomToken(e.target.value),\n            sx: {\n              flex: 1,\n              '& .MuiOutlinedInput-root': {\n                backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : '#fff',\n                color: darkMode ? '#fff' : 'inherit',\n                '& fieldset': {\n                  borderColor: darkMode ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            onClick: handleCustomTokenSubscribe,\n            disabled: !customToken.trim(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          overflowY: 'auto',\n          flex: 1,\n          '&::-webkit-scrollbar': {\n            width: '8px'\n          },\n          '&::-webkit-scrollbar-track': {\n            backgroundColor: darkMode ? '#1e1e1e' : '#f5f5f5'\n          },\n          '&::-webkit-scrollbar-thumb': {\n            backgroundColor: darkMode ? '#555' : '#ccc',\n            borderRadius: '4px'\n          }\n        },\n        children: hasOptionData && filteredTokens.map(item => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 1,\n            borderBottom: '1px solid',\n            borderColor: darkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            '&:hover': {\n              backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontWeight: 500\n              },\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                color: darkMode ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)'\n              },\n              children: item.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), subscriptions.includes(item.token) ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            size: \"small\",\n            onClick: () => handleTokenUnsubscribe(item.token),\n            sx: {\n              minWidth: '100px'\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            size: \"small\",\n            onClick: () => handleTokenSubscribe(item.token),\n            sx: {\n              minWidth: '100px'\n            },\n            children: \"Subscribe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this)]\n        }, item.token, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"inspector-content\",\n      sx: {\n        flex: 1,\n        p: 2,\n        overflow: 'auto',\n        '&::-webkit-scrollbar': {\n          width: '8px'\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: darkMode ? '#121212' : '#f5f5f5'\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: darkMode ? '#555' : '#ccc',\n          borderRadius: '4px'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 2\n        },\n        children: \"Active Subscriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), subscriptions.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          textAlign: 'center',\n          backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.03)',\n          borderRadius: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No active subscriptions. Subscribe to tokens to see real-time updates.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: subscriptions.map(token => {\n          const data = subscriptionUpdates[token] || {\n            currentPrice: '-',\n            percentChange: 0,\n            values: []\n          };\n          const tokenInfo = availableTokens.find(t => t.token === token) || {\n            label: token,\n            type: 'Custom'\n          };\n          const isPositiveChange = data.percentChange >= 0;\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              elevation: 3,\n              sx: {\n                overflow: 'visible',\n                height: '100%',\n                backgroundColor: darkMode ? '#1e1e1e' : '#fff',\n                borderLeft: '4px solid',\n                borderColor: isPositiveChange ? '#4caf50' : '#f44336',\n                transition: 'all 0.3s ease',\n                animation: data.updatedAt ? 'pulse 0.5s' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                sx: {\n                  p: 2,\n                  '&:last-child': {\n                    pb: 2\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    sx: {\n                      flex: 1,\n                      fontWeight: 500,\n                      color: darkMode ? '#fff' : 'inherit',\n                      whiteSpace: 'nowrap',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis'\n                    },\n                    children: tokenInfo.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: tokenInfo.type,\n                    sx: {\n                      mr: 1\n                    },\n                    color: tokenInfo.type === 'CALL' ? 'success' : tokenInfo.type === 'PUT' ? 'error' : 'info'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    color: \"default\",\n                    onClick: () => handleTokenUnsubscribe(token),\n                    sx: {\n                      p: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(HighlightOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    sx: {\n                      fontWeight: 'bold',\n                      color: darkMode ? '#fff' : 'inherit'\n                    },\n                    children: data.currentPrice !== '-' ? data.currentPrice.toFixed(2) : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      ml: 1.5,\n                      color: isPositiveChange ? '#4caf50' : '#f44336'\n                    },\n                    children: [isPositiveChange ? /*#__PURE__*/_jsxDEV(TrendingUp, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 47\n                    }, this) : /*#__PURE__*/_jsxDEV(TrendingDown, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 81\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontWeight: 500,\n                        ml: 0.5\n                      },\n                      children: [isPositiveChange ? '+' : '', data.percentChange !== undefined ? data.percentChange.toFixed(2) : 0, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 23\n                }, this), data.values.length > 1 && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    height: '60px',\n                    mt: 1,\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    gap: '2px',\n                    borderBottom: '1px solid',\n                    borderColor: darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n                    pt: 1\n                  },\n                  children: data.values.map((value, index) => {\n                    const min = Math.min(...data.values);\n                    const max = Math.max(...data.values);\n                    const range = max - min || 1;\n                    const height = (value - min) / range * 100;\n                    const isPositive = index > 0 ? value >= data.values[index - 1] : true;\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        flex: 1,\n                        height: `${Math.max(5, height)}%`,\n                        backgroundColor: isPositive ? '#4caf50' : '#f44336',\n                        opacity: index === data.values.length - 1 ? 1 : 0.7,\n                        borderRadius: '1px',\n                        transition: 'height 0.3s ease'\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this)\n          }, token, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(RealtimeInspector, \"1kwVbTmtn3etgqzFl0YctPae6Mw=\");\n_c = RealtimeInspector;\nexport default RealtimeInspector;\nvar _c;\n$RefreshReg$(_c, \"RealtimeInspector\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","connectToWebSocket","subscribeToTokens","unsubscribeFromTokens","disconnect","Box","TextField","Button","Card","CardContent","Typography","Chip","IconButton","Grid","CircularProgress","Switch","FormControlLabel","HighlightOff","TrendingUp","TrendingDown","jsxDEV","_jsxDEV","RealtimeInspector","darkMode","toggleDarkMode","_s","optionChainData","setOptionChainData","subscriptions","setSubscriptions","subscriptionUpdates","setSubscriptionUpdates","tokenSearch","setTokenSearch","availableTokens","setAvailableTokens","isLoading","setIsLoading","connectionError","setConnectionError","isConnected","setIsConnected","reconnecting","setReconnecting","customToken","setCustomToken","handleInitialData","data","tokens","token","label","type","strikes","flatMap","strike","call","strikePrice","put","handlePriceUpdate","prev","newUpdates","Object","entries","forEach","update","price","undefined","currentPrice","percentChange","values","updatedAt","Date","now","slice","handleSubscriptionUpdate","subs","handleConnectionStatus","status","handleReconnecting","attempt","maxAttempts","console","log","connection","onInitialData","onPriceUpdate","onSubscriptionUpdate","onConnectionStatus","onReconnecting","onError","error","message","handleTokenSubscribe","includes","handleTokenUnsubscribe","filter","t","handleCustomTokenSubscribe","trim","filteredTokens","item","toLowerCase","className","sx","display","justifyContent","alignItems","height","flexDirection","gap","backgroundColor","color","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","control","checked","onChange","onClick","window","location","reload","hasOptionData","Boolean","overflow","width","borderRight","borderColor","overflowY","p","borderBottom","mb","size","mr","length","fontSize","px","py","ml","fullWidth","placeholder","value","e","target","opacity","flex","disabled","borderRadius","map","fontWeight","minWidth","textAlign","container","spacing","tokenInfo","find","isPositiveChange","xs","sm","md","elevation","borderLeft","transition","animation","pb","whiteSpace","textOverflow","toFixed","mt","pt","index","min","Math","max","range","isPositive","_c","$RefreshReg$"],"sources":["C:/Users/scr/OneDrive/Desktop/new/frontend/src/components/RealtimeInspector.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { connectToWebSocket, subscribeToTokens, unsubscribeFromTokens, disconnect } from '../services/websocketService';\nimport { Box, TextField, Button, Card, CardContent, Typography, Chip, IconButton, Grid, CircularProgress, Switch, FormControlLabel } from '@mui/material';\nimport { HighlightOff, TrendingUp, TrendingDown } from '@mui/icons-material';\nimport './RealtimeInspector.css';\n\nconst RealtimeInspector = ({ darkMode, toggleDarkMode }) => {\n  // Using state to store option chain data for component functionality\n  const [optionChainData, setOptionChainData] = useState(null);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscriptionUpdates, setSubscriptionUpdates] = useState({});\n  const [tokenSearch, setTokenSearch] = useState('');\n  const [availableTokens, setAvailableTokens] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionError, setConnectionError] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [reconnecting, setReconnecting] = useState(false);\n  const [customToken, setCustomToken] = useState('');\n\n  const handleInitialData = useCallback((data) => {\n    setOptionChainData(data);\n    setIsLoading(false);\n\n    // Prepare available tokens list\n    const tokens = [\n      { token: 'UNDERLYING', label: 'Underlying Asset', type: 'UNDERLYING' },\n      ...data.strikes.flatMap(strike => [\n        { \n          token: strike.call.token, \n          label: `CALL ${strike.strikePrice}`, \n          type: 'CALL', \n          strike: strike.strikePrice \n        },\n        { \n          token: strike.put.token, \n          label: `PUT ${strike.strikePrice}`, \n          type: 'PUT', \n          strike: strike.strikePrice \n        }\n      ])\n    ];\n    setAvailableTokens(tokens);\n    \n    // No longer auto-subscribing to underlying token\n    // Let the user explicitly subscribe to tokens they want\n  }, []);\n\n  const handlePriceUpdate = useCallback((data) => {\n    setSubscriptionUpdates(prev => {\n      const newUpdates = { ...prev };\n      \n      // Safely process updates\n      Object.entries(data).forEach(([token, update]) => {\n        if (!update) return; // Skip if update is undefined\n        \n        // Extract price and percentChange, handling different property names\n        const price = update.price !== undefined ? update.price : \n                     (update.currentPrice !== undefined ? update.currentPrice : 0);\n        const percentChange = update.percentChange !== undefined ? update.percentChange : 0;\n        \n        if (!newUpdates[token]) {\n          newUpdates[token] = {\n            values: [],\n            currentPrice: price,\n            percentChange: percentChange,\n            updatedAt: Date.now()\n          };\n        } else {\n          newUpdates[token].currentPrice = price;\n          newUpdates[token].percentChange = percentChange;\n          newUpdates[token].updatedAt = Date.now();\n        }\n        \n        // Keep only the last 20 updates for the chart\n        newUpdates[token].values = [\n          ...newUpdates[token].values.slice(-19),\n          price\n        ];\n      });\n      \n      return newUpdates;\n    });\n  }, []);\n\n  const handleSubscriptionUpdate = useCallback((subs) => {\n    setSubscriptions(subs);\n  }, []);\n\n  const handleConnectionStatus = useCallback((status) => {\n    setIsConnected(status);\n    if (status) {\n      setReconnecting(false);\n    }\n  }, []);\n\n  const handleReconnecting = useCallback((attempt, maxAttempts) => {\n    setReconnecting(true);\n  }, []);\n\n  useEffect(() => {\n    console.log('RealtimeInspector: Connecting to WebSocket');\n    \n    // Establish WebSocket connection immediately when component mounts\n    const connection = connectToWebSocket({\n      onInitialData: handleInitialData,\n      onPriceUpdate: handlePriceUpdate,\n      onSubscriptionUpdate: handleSubscriptionUpdate,\n      onConnectionStatus: handleConnectionStatus,\n      onReconnecting: handleReconnecting,\n      onError: (error) => {\n        console.error('RealtimeInspector WebSocket error:', error);\n        setConnectionError('Connection error: ' + (error.message || error));\n      }\n    });\n    \n    // Keep track of cleanup function to unsubscribe properly on unmount\n    return () => {\n      console.log('RealtimeInspector: Cleaning up');\n      // No need to disconnect on unmount since we want to keep connections between tab switches\n    };\n  }, [handleInitialData, handlePriceUpdate, handleSubscriptionUpdate, handleConnectionStatus, handleReconnecting]);\n\n  const handleTokenSubscribe = (token) => {\n    console.log('Subscribing to token:', token);\n    // Add to local state immediately for responsive UI\n    setSubscriptions(prev => {\n      if (!prev.includes(token)) {\n        return [...prev, token];\n      }\n      return prev;\n    });\n    subscribeToTokens([token]);\n  };\n\n  const handleTokenUnsubscribe = (token) => {\n    console.log('Unsubscribing from token:', token);\n    // Remove from local state immediately for responsive UI\n    setSubscriptions(prev => prev.filter(t => t !== token));\n    unsubscribeFromTokens([token]);\n  };\n\n  const handleCustomTokenSubscribe = () => {\n    if (customToken.trim()) {\n      handleTokenSubscribe(customToken.trim());\n      setCustomToken('');\n    }\n  };\n\n  const filteredTokens = availableTokens.filter(item => \n    item.label.toLowerCase().includes(tokenSearch.toLowerCase())\n  );\n\n  if (isLoading) {\n    return (\n      <Box className={`${darkMode ? 'dark-mode' : ''}`} sx={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh',\n        flexDirection: 'column',\n        gap: 2,\n        backgroundColor: darkMode ? '#121212' : '#f5f5f5',\n        color: darkMode ? '#fff' : '#333'\n      }}>\n        <CircularProgress color=\"primary\" />\n        <Typography variant=\"h6\">Loading data...</Typography>\n        <FormControlLabel\n          control={<Switch checked={darkMode} onChange={toggleDarkMode} />}\n          label=\"Dark Mode\"\n        />\n      </Box>\n    );\n  }\n\n  if (connectionError) {\n    return (\n      <Box className={`${darkMode ? 'dark-mode' : ''}`} sx={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh',\n        flexDirection: 'column',\n        gap: 2,\n        backgroundColor: darkMode ? '#121212' : '#f5f5f5',\n        color: darkMode ? '#fff' : '#333'\n      }}>\n        <Typography variant=\"h6\" color=\"error\">{connectionError}</Typography>\n        <Button variant=\"contained\" onClick={() => window.location.reload()}>\n          Reload Page\n        </Button>\n        <FormControlLabel\n          control={<Switch checked={darkMode} onChange={toggleDarkMode} />}\n          label=\"Dark Mode\"\n        />\n      </Box>\n    );\n  }\n\n  const hasOptionData = Boolean(optionChainData);\n\n  return (\n    <Box className={`realtime-inspector ${darkMode ? 'dark-mode' : ''}`} sx={{\n      display: 'flex',\n      height: 'calc(100vh - 64px)',\n      backgroundColor: darkMode ? '#121212' : '#f5f5f5',\n      color: darkMode ? '#fff' : '#333',\n      overflow: 'hidden'\n    }}>\n      <Box className=\"inspector-sidebar\" sx={{\n        width: '300px',\n        borderRight: '1px solid',\n        borderColor: darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        overflowY: 'hidden',\n        backgroundColor: darkMode ? '#1e1e1e' : '#fff'\n      }}>\n        <Box sx={{ p: 2, borderBottom: '1px solid', borderColor: darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)' }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n            <Chip \n              label={isConnected ? \"Connected\" : reconnecting ? \"Reconnecting...\" : \"Disconnected\"} \n              color={isConnected ? \"success\" : reconnecting ? \"warning\" : \"error\"}\n              size=\"small\"\n              sx={{ mr: 1 }}\n            />\n            {isConnected ? (\n              <Button\n                variant=\"outlined\"\n                color=\"error\"\n                size=\"small\"\n                onClick={() => {\n                  // Unsubscribe from all tokens\n                  if (subscriptions.length > 0) {\n                    unsubscribeFromTokens(subscriptions);\n                    setSubscriptions([]);\n                    setSubscriptionUpdates({});\n                  }\n                  // Disconnect WebSocket\n                  disconnect();\n                  setIsConnected(false);\n                }}\n                sx={{ fontSize: '0.75rem', px: 1, py: 0.5 }}\n              >\n                Disconnect\n              </Button>\n            ) : (\n              <Button\n                variant=\"outlined\"\n                color=\"success\"\n                size=\"small\"\n                onClick={() => {\n                  // Reconnect WebSocket\n                  connectToWebSocket({\n                    onInitialData: handleInitialData,\n                    onPriceUpdate: handlePriceUpdate,\n                    onSubscriptionUpdate: handleSubscriptionUpdate,\n                    onConnectionStatus: handleConnectionStatus,\n                    onReconnecting: handleReconnecting,\n                    onError: (error) => {\n                      console.error('RealtimeInspector WebSocket error:', error);\n                      setConnectionError('Connection error: ' + (error.message || error));\n                    }\n                  });\n                }}\n                sx={{ fontSize: '0.75rem', px: 1, py: 0.5 }}\n              >\n                Connect\n              </Button>\n            )}\n            <FormControlLabel\n              control={<Switch size=\"small\" checked={darkMode} onChange={toggleDarkMode} />}\n              label=\"Dark\"\n              sx={{ ml: 'auto' }}\n            />\n          </Box>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            placeholder=\"Search tokens...\"\n            value={tokenSearch}\n            onChange={(e) => setTokenSearch(e.target.value)}\n            sx={{\n              mb: 1,\n              '& .MuiOutlinedInput-root': {\n                backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : '#fff',\n                color: darkMode ? '#fff' : 'inherit',\n                '& fieldset': {\n                  borderColor: darkMode ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                },\n                '&:hover fieldset': {\n                  borderColor: darkMode ? 'rgba(255,255,255,0.3)' : 'rgba(0,0,0,0.3)',\n                },\n              },\n              '& .MuiInputBase-input::placeholder': {\n                color: darkMode ? 'rgba(255,255,255,0.5)' : 'rgba(0,0,0,0.5)',\n                opacity: 1,\n              },\n            }}\n          />\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            <TextField\n              size=\"small\"\n              placeholder=\"Custom token\"\n              value={customToken}\n              onChange={(e) => setCustomToken(e.target.value)}\n              sx={{\n                flex: 1,\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : '#fff',\n                  color: darkMode ? '#fff' : 'inherit',\n                  '& fieldset': {\n                    borderColor: darkMode ? 'rgba(255,255,255,0.2)' : 'rgba(0,0,0,0.2)',\n                  },\n                },\n              }}\n            />\n            <Button \n              variant=\"contained\" \n              size=\"small\" \n              onClick={handleCustomTokenSubscribe}\n              disabled={!customToken.trim()}\n            >\n              Add\n            </Button>\n          </Box>\n        </Box>\n        \n        <Box sx={{ \n          overflowY: 'auto', \n          flex: 1,\n          '&::-webkit-scrollbar': {\n            width: '8px',\n          },\n          '&::-webkit-scrollbar-track': {\n            backgroundColor: darkMode ? '#1e1e1e' : '#f5f5f5',\n          },\n          '&::-webkit-scrollbar-thumb': {\n            backgroundColor: darkMode ? '#555' : '#ccc',\n            borderRadius: '4px',\n          },\n        }}>\n          {hasOptionData && filteredTokens.map((item) => (\n            <Box key={item.token} sx={{ \n              p: 1, \n              borderBottom: '1px solid', \n              borderColor: darkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)',\n              display: 'flex', \n              justifyContent: 'space-between',\n              alignItems: 'center',\n              '&:hover': {\n                backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)',\n              }\n            }}>\n              <Box>\n                <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>{item.label}</Typography>\n                <Typography variant=\"caption\" sx={{ color: darkMode ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.6)' }}>\n                  {item.type}\n                </Typography>\n              </Box>\n              {subscriptions.includes(item.token) ? (\n                <Button \n                  variant=\"outlined\" \n                  color=\"error\" \n                  size=\"small\"\n                  onClick={() => handleTokenUnsubscribe(item.token)}\n                  sx={{ minWidth: '100px' }}\n                >\n                  Remove\n                </Button>\n              ) : (\n                <Button \n                  variant=\"outlined\" \n                  color=\"primary\" \n                  size=\"small\"\n                  onClick={() => handleTokenSubscribe(item.token)}\n                  sx={{ minWidth: '100px' }}\n                >\n                  Subscribe\n                </Button>\n              )}\n            </Box>\n          ))}\n        </Box>\n      </Box>\n      \n      <Box className=\"inspector-content\" sx={{ \n        flex: 1, \n        p: 2, \n        overflow: 'auto',\n        '&::-webkit-scrollbar': {\n          width: '8px',\n        },\n        '&::-webkit-scrollbar-track': {\n          backgroundColor: darkMode ? '#121212' : '#f5f5f5',\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: darkMode ? '#555' : '#ccc',\n          borderRadius: '4px',\n        },\n      }}>\n        <Typography variant=\"h5\" sx={{ mb: 2 }}>Active Subscriptions</Typography>\n        \n        {subscriptions.length === 0 ? (\n          <Box sx={{ \n            p: 3, \n            textAlign: 'center', \n            backgroundColor: darkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.03)',\n            borderRadius: 1,\n          }}>\n            <Typography>\n              No active subscriptions. Subscribe to tokens to see real-time updates.\n            </Typography>\n          </Box>\n        ) : (\n          <Grid container spacing={2}>\n            {subscriptions.map(token => {\n              const data = subscriptionUpdates[token] || { currentPrice: '-', percentChange: 0, values: [] };\n              const tokenInfo = availableTokens.find(t => t.token === token) || { label: token, type: 'Custom' };\n              const isPositiveChange = data.percentChange >= 0;\n              \n              return (\n                <Grid item xs={12} sm={6} md={4} key={token}>\n                  <Card \n                    elevation={3} \n                    sx={{\n                      overflow: 'visible',\n                      height: '100%',\n                      backgroundColor: darkMode ? '#1e1e1e' : '#fff',\n                      borderLeft: '4px solid',\n                      borderColor: isPositiveChange ? '#4caf50' : '#f44336',\n                      transition: 'all 0.3s ease',\n                      animation: data.updatedAt ? 'pulse 0.5s' : 'none',\n                    }}\n                  >\n                    <CardContent sx={{ p: 2, '&:last-child': { pb: 2 } }}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                        <Typography \n                          variant=\"h6\" \n                          sx={{ \n                            flex: 1, \n                            fontWeight: 500, \n                            color: darkMode ? '#fff' : 'inherit',\n                            whiteSpace: 'nowrap',\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis'\n                          }}\n                        >\n                          {tokenInfo.label}\n                        </Typography>\n                        <Chip \n                          size=\"small\" \n                          label={tokenInfo.type} \n                          sx={{ mr: 1 }} \n                          color={\n                            tokenInfo.type === 'CALL' ? 'success' : \n                            tokenInfo.type === 'PUT' ? 'error' : \n                            'info'\n                          }\n                        />\n                        <IconButton \n                          size=\"small\" \n                          color=\"default\" \n                          onClick={() => handleTokenUnsubscribe(token)}\n                          sx={{ p: 0.5 }}\n                        >\n                          <HighlightOff />\n                        </IconButton>\n                      </Box>\n                      \n                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                        <Typography \n                          variant=\"h5\" \n                          sx={{ fontWeight: 'bold', color: darkMode ? '#fff' : 'inherit' }}\n                        >\n                          {data.currentPrice !== '-' ? data.currentPrice.toFixed(2) : '-'}\n                        </Typography>\n                        <Box sx={{ \n                          display: 'flex', \n                          alignItems: 'center', \n                          ml: 1.5,\n                          color: isPositiveChange ? '#4caf50' : '#f44336',\n                        }}>\n                          {isPositiveChange ? <TrendingUp fontSize=\"small\" /> : <TrendingDown fontSize=\"small\" />}\n                          <Typography \n                            sx={{ \n                              fontWeight: 500,\n                              ml: 0.5\n                            }}\n                          >\n                            {isPositiveChange ? '+' : ''}{data.percentChange !== undefined ? data.percentChange.toFixed(2) : 0}%\n                          </Typography>\n                        </Box>\n                      </Box>\n                      \n                      {data.values.length > 1 && (\n                        <Box sx={{ \n                          height: '60px', \n                          mt: 1, \n                          display: 'flex', \n                          alignItems: 'flex-end',\n                          gap: '2px',\n                          borderBottom: '1px solid',\n                          borderColor: darkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n                          pt: 1\n                        }}>\n                          {data.values.map((value, index) => {\n                            const min = Math.min(...data.values);\n                            const max = Math.max(...data.values);\n                            const range = max - min || 1;\n                            const height = ((value - min) / range) * 100;\n                            const isPositive = index > 0 ? value >= data.values[index - 1] : true;\n                            \n                            return (\n                              <Box \n                                key={index} \n                                sx={{ \n                                  flex: 1,\n                                  height: `${Math.max(5, height)}%`,\n                                  backgroundColor: isPositive ? '#4caf50' : '#f44336',\n                                  opacity: index === data.values.length - 1 ? 1 : 0.7,\n                                  borderRadius: '1px',\n                                  transition: 'height 0.3s ease'\n                                }}\n                              />\n                            );\n                          })}\n                        </Box>\n                      )}\n                    </CardContent>\n                  </Card>\n                </Grid>\n              );\n            })}\n          </Grid>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default RealtimeInspector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}