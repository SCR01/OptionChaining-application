{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scr\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\RealtimeInspector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { connectToWebSocket, subscribeToTokens, unsubscribeFromTokens } from '../services/websocketService';\nimport './RealtimeInspector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealtimeInspector = () => {\n  _s();\n  // Using state to store option chain data for component functionality\n  const [optionChainData, setOptionChainData] = useState(null);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscriptionUpdates, setSubscriptionUpdates] = useState({});\n  const [tokenSearch, setTokenSearch] = useState('');\n  const [availableTokens, setAvailableTokens] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionError, setConnectionError] = useState(null);\n  const handleInitialData = useCallback(data => {\n    console.log('Received initial data:', data);\n    setOptionChainData(data);\n    setIsLoading(false);\n\n    // Prepare available tokens list\n    const tokens = [{\n      token: 'UNDERLYING',\n      label: 'Underlying Asset',\n      type: 'UNDERLYING'\n    }, ...data.strikes.flatMap(strike => [{\n      token: strike.call.token,\n      label: `CALL ${strike.strike}`,\n      type: 'CALL',\n      strike: strike.strike\n    }, {\n      token: strike.put.token,\n      label: `PUT ${strike.strike}`,\n      type: 'PUT',\n      strike: strike.strike\n    }])];\n    setAvailableTokens(tokens);\n  }, []);\n  const handlePriceUpdate = useCallback(data => {\n    console.log('Received price update:', data);\n    setSubscriptionUpdates(prev => {\n      const newUpdates = {\n        ...prev\n      };\n      Object.entries(data).forEach(([token, update]) => {\n        if (!newUpdates[token]) {\n          newUpdates[token] = {\n            values: [],\n            currentPrice: update.currentPrice,\n            percentChange: update.percentChange\n          };\n        } else {\n          newUpdates[token].currentPrice = update.currentPrice;\n          newUpdates[token].percentChange = update.percentChange;\n        }\n\n        // Keep only the last 20 updates for the chart\n        newUpdates[token].values = [...newUpdates[token].values.slice(-19), update.currentPrice];\n      });\n      return newUpdates;\n    });\n  }, []);\n  const handleSubscriptionUpdate = useCallback(subs => {\n    console.log('Subscription update:', subs);\n    setSubscriptions(subs);\n  }, []);\n\n  // Handle clean unsubscribe on unmount\n  const cleanupSubscriptions = useCallback(() => {\n    if (subscriptions.length > 0) {\n      console.log('Cleaning up subscriptions:', subscriptions);\n      unsubscribeFromTokens(subscriptions);\n    }\n  }, [subscriptions]);\n  useEffect(() => {\n    let mounted = true;\n    // Connect to WebSocket and set up handlers\n    try {\n      connectToWebSocket({\n        onInitialData: data => {\n          if (mounted) handleInitialData(data);\n        },\n        onPriceUpdate: data => {\n          if (mounted) handlePriceUpdate(data);\n        },\n        onSubscriptionUpdate: subs => {\n          if (mounted) handleSubscriptionUpdate(subs);\n        },\n        onError: error => {\n          console.error('WebSocket error:', error);\n          if (mounted) setConnectionError('Connection error: ' + error.message);\n        }\n      });\n    } catch (error) {\n      console.error('Failed to connect to WebSocket:', error);\n      if (mounted) setConnectionError('Failed to connect to WebSocket server');\n    }\n    return () => {\n      mounted = false;\n      cleanupSubscriptions();\n    };\n  }, [handleInitialData, handlePriceUpdate, handleSubscriptionUpdate, cleanupSubscriptions, subscriptions]);\n  const handleTokenSubscribe = token => {\n    console.log('Subscribing to token:', token);\n    subscribeToTokens([token]);\n  };\n  const handleTokenUnsubscribe = token => {\n    console.log('Unsubscribing from token:', token);\n    unsubscribeFromTokens([token]);\n  };\n  const filteredTokens = availableTokens.filter(item => item.label.toLowerCase().includes(tokenSearch.toLowerCase()));\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n  if (connectionError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: connectionError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Using optionChainData in the component to fix the unused variable warning\n  const hasOptionData = Boolean(optionChainData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtime-inspector\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inspector-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search tokens...\",\n          value: tokenSearch,\n          onChange: e => setTokenSearch(e.target.value),\n          className: \"token-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tokens-list\",\n        children: hasOptionData && filteredTokens.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"token-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"token-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"token-label\",\n              children: item.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"token-type\",\n              children: item.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), subscriptions.includes(item.token) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"token-action unsubscribe\",\n            onClick: () => handleTokenUnsubscribe(item.token),\n            children: \"Unsubscribe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"token-action subscribe\",\n            onClick: () => handleTokenSubscribe(item.token),\n            children: \"Subscribe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, item.token, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inspector-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Active Subscriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), subscriptions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-subscriptions\",\n        children: \"No active subscriptions. Subscribe to tokens to see real-time updates.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subscription-grid\",\n        children: subscriptions.map(token => {\n          const data = subscriptionUpdates[token] || {\n            currentPrice: '-',\n            percentChange: 0,\n            values: []\n          };\n          const tokenInfo = availableTokens.find(t => t.token === token) || {};\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subscription-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subscription-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subscription-title\",\n                children: tokenInfo.label || token\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"subscription-close\",\n                onClick: () => handleTokenUnsubscribe(token),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subscription-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price-display\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"current-price\",\n                  children: data.currentPrice !== '-' ? data.currentPrice.toFixed(2) : '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `price-change ${data.percentChange >= 0 ? 'positive' : 'negative'}`,\n                  children: [data.percentChange >= 0 ? '+' : '', data.percentChange !== undefined ? data.percentChange.toFixed(2) : 0, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this), data.values.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price-chart\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chart-container\",\n                  children: data.values.map((value, index) => {\n                    const min = Math.min(...data.values);\n                    const max = Math.max(...data.values);\n                    const range = max - min || 1;\n                    const height = (value - min) / range * 100;\n                    const isPositive = index > 0 ? value >= data.values[index - 1] : true;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `chart-bar ${isPositive ? 'positive' : 'negative'}`,\n                      style: {\n                        height: `${Math.max(5, height)}%`\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, token, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(RealtimeInspector, \"CS8NgzQ2vH4QgW4PzqKzWeKQ8i0=\");\n_c = RealtimeInspector;\nexport default RealtimeInspector;\nvar _c;\n$RefreshReg$(_c, \"RealtimeInspector\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","connectToWebSocket","subscribeToTokens","unsubscribeFromTokens","jsxDEV","_jsxDEV","RealtimeInspector","_s","optionChainData","setOptionChainData","subscriptions","setSubscriptions","subscriptionUpdates","setSubscriptionUpdates","tokenSearch","setTokenSearch","availableTokens","setAvailableTokens","isLoading","setIsLoading","connectionError","setConnectionError","handleInitialData","data","console","log","tokens","token","label","type","strikes","flatMap","strike","call","put","handlePriceUpdate","prev","newUpdates","Object","entries","forEach","update","values","currentPrice","percentChange","slice","handleSubscriptionUpdate","subs","cleanupSubscriptions","length","mounted","onInitialData","onPriceUpdate","onSubscriptionUpdate","onError","error","message","handleTokenSubscribe","handleTokenUnsubscribe","filteredTokens","filter","item","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","hasOptionData","Boolean","placeholder","value","onChange","e","target","map","onClick","tokenInfo","find","t","toFixed","undefined","index","min","Math","max","range","height","isPositive","style","_c","$RefreshReg$"],"sources":["C:/Users/scr/OneDrive/Desktop/new/frontend/src/components/RealtimeInspector.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { connectToWebSocket, subscribeToTokens, unsubscribeFromTokens } from '../services/websocketService';\nimport './RealtimeInspector.css';\n\nconst RealtimeInspector = () => {\n  // Using state to store option chain data for component functionality\n  const [optionChainData, setOptionChainData] = useState(null);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscriptionUpdates, setSubscriptionUpdates] = useState({});\n  const [tokenSearch, setTokenSearch] = useState('');\n  const [availableTokens, setAvailableTokens] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionError, setConnectionError] = useState(null);\n\n  const handleInitialData = useCallback((data) => {\n    console.log('Received initial data:', data);\n    setOptionChainData(data);\n    setIsLoading(false);\n\n    // Prepare available tokens list\n    const tokens = [\n      { token: 'UNDERLYING', label: 'Underlying Asset', type: 'UNDERLYING' },\n      ...data.strikes.flatMap(strike => [\n        { \n          token: strike.call.token, \n          label: `CALL ${strike.strike}`, \n          type: 'CALL', \n          strike: strike.strike \n        },\n        { \n          token: strike.put.token, \n          label: `PUT ${strike.strike}`, \n          type: 'PUT', \n          strike: strike.strike \n        }\n      ])\n    ];\n    setAvailableTokens(tokens);\n  }, []);\n\n  const handlePriceUpdate = useCallback((data) => {\n    console.log('Received price update:', data);\n    setSubscriptionUpdates(prev => {\n      const newUpdates = { ...prev };\n      \n      Object.entries(data).forEach(([token, update]) => {\n        if (!newUpdates[token]) {\n          newUpdates[token] = {\n            values: [],\n            currentPrice: update.currentPrice,\n            percentChange: update.percentChange\n          };\n        } else {\n          newUpdates[token].currentPrice = update.currentPrice;\n          newUpdates[token].percentChange = update.percentChange;\n        }\n        \n        // Keep only the last 20 updates for the chart\n        newUpdates[token].values = [\n          ...newUpdates[token].values.slice(-19),\n          update.currentPrice\n        ];\n      });\n      \n      return newUpdates;\n    });\n  }, []);\n\n  const handleSubscriptionUpdate = useCallback((subs) => {\n    console.log('Subscription update:', subs);\n    setSubscriptions(subs);\n  }, []);\n\n  // Handle clean unsubscribe on unmount\n  const cleanupSubscriptions = useCallback(() => {\n    if (subscriptions.length > 0) {\n      console.log('Cleaning up subscriptions:', subscriptions);\n      unsubscribeFromTokens(subscriptions);\n    }\n  }, [subscriptions]);\n\n  useEffect(() => {\n    let mounted = true;\n    // Connect to WebSocket and set up handlers\n    try {\n      connectToWebSocket({\n        onInitialData: (data) => {\n          if (mounted) handleInitialData(data);\n        },\n        onPriceUpdate: (data) => {\n          if (mounted) handlePriceUpdate(data);\n        },\n        onSubscriptionUpdate: (subs) => {\n          if (mounted) handleSubscriptionUpdate(subs);\n        },\n        onError: (error) => {\n          console.error('WebSocket error:', error);\n          if (mounted) setConnectionError('Connection error: ' + error.message);\n        }\n      });\n    } catch (error) {\n      console.error('Failed to connect to WebSocket:', error);\n      if (mounted) setConnectionError('Failed to connect to WebSocket server');\n    }\n    \n    return () => {\n      mounted = false;\n      cleanupSubscriptions();\n    };\n  }, [handleInitialData, handlePriceUpdate, handleSubscriptionUpdate, cleanupSubscriptions, subscriptions]);\n\n  const handleTokenSubscribe = (token) => {\n    console.log('Subscribing to token:', token);\n    subscribeToTokens([token]);\n  };\n\n  const handleTokenUnsubscribe = (token) => {\n    console.log('Unsubscribing from token:', token);\n    unsubscribeFromTokens([token]);\n  };\n\n  const filteredTokens = availableTokens.filter(item => \n    item.label.toLowerCase().includes(tokenSearch.toLowerCase())\n  );\n\n  if (isLoading) {\n    return <div className=\"loading\">Loading data...</div>;\n  }\n\n  if (connectionError) {\n    return <div className=\"error\">{connectionError}</div>;\n  }\n\n  // Using optionChainData in the component to fix the unused variable warning\n  const hasOptionData = Boolean(optionChainData);\n\n  return (\n    <div className=\"realtime-inspector\">\n      <div className=\"inspector-sidebar\">\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Search tokens...\"\n            value={tokenSearch}\n            onChange={(e) => setTokenSearch(e.target.value)}\n            className=\"token-search\"\n          />\n        </div>\n        <div className=\"tokens-list\">\n          {hasOptionData && filteredTokens.map((item) => (\n            <div key={item.token} className=\"token-item\">\n              <div className=\"token-info\">\n                <div className=\"token-label\">{item.label}</div>\n                <div className=\"token-type\">{item.type}</div>\n              </div>\n              {subscriptions.includes(item.token) ? (\n                <button \n                  className=\"token-action unsubscribe\"\n                  onClick={() => handleTokenUnsubscribe(item.token)}\n                >\n                  Unsubscribe\n                </button>\n              ) : (\n                <button \n                  className=\"token-action subscribe\"\n                  onClick={() => handleTokenSubscribe(item.token)}\n                >\n                  Subscribe\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"inspector-content\">\n        <h2>Active Subscriptions</h2>\n        {subscriptions.length === 0 ? (\n          <div className=\"no-subscriptions\">\n            No active subscriptions. Subscribe to tokens to see real-time updates.\n          </div>\n        ) : (\n          <div className=\"subscription-grid\">\n            {subscriptions.map(token => {\n              const data = subscriptionUpdates[token] || { currentPrice: '-', percentChange: 0, values: [] };\n              const tokenInfo = availableTokens.find(t => t.token === token) || {};\n              \n              return (\n                <div key={token} className=\"subscription-card\">\n                  <div className=\"subscription-header\">\n                    <div className=\"subscription-title\">{tokenInfo.label || token}</div>\n                    <button \n                      className=\"subscription-close\"\n                      onClick={() => handleTokenUnsubscribe(token)}\n                    >\n                      ×\n                    </button>\n                  </div>\n                  \n                  <div className=\"subscription-body\">\n                    <div className=\"price-display\">\n                      <div className=\"current-price\">{data.currentPrice !== '-' ? data.currentPrice.toFixed(2) : '-'}</div>\n                      <div className={`price-change ${data.percentChange >= 0 ? 'positive' : 'negative'}`}>\n                        {data.percentChange >= 0 ? '+' : ''}{data.percentChange !== undefined ? data.percentChange.toFixed(2) : 0}%\n                      </div>\n                    </div>\n                    \n                    {data.values.length > 0 && (\n                      <div className=\"price-chart\">\n                        <div className=\"chart-container\">\n                          {data.values.map((value, index) => {\n                            const min = Math.min(...data.values);\n                            const max = Math.max(...data.values);\n                            const range = max - min || 1;\n                            const height = ((value - min) / range) * 100;\n                            const isPositive = index > 0 ? value >= data.values[index - 1] : true;\n                            \n                            return (\n                              <div \n                                key={index} \n                                className={`chart-bar ${isPositive ? 'positive' : 'negative'}`}\n                                style={{ height: `${Math.max(5, height)}%` }}\n                              />\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RealtimeInspector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}